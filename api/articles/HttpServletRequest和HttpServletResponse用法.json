{"title":"HttpServletRequest和HttpServletResponse用法","uid":"713afdeed1c1908fb0df299487bbf254","slug":"HttpServletRequest和HttpServletResponse用法","date":"2023-09-03T11:39:55.000Z","updated":"2023-09-03T12:12:59.723Z","comments":true,"path":"api/articles/HttpServletRequest和HttpServletResponse用法.json","keywords":null,"cover":"/images/4.png","content":"<h3 id=\"HttpServletRequest-和-HttpServletResponse-是-Java-Servlet-技术中的两个重要对象，用于处理HTTP请求和响应。下面我会分别介绍它们的使用方法：\"><a href=\"#HttpServletRequest-和-HttpServletResponse-是-Java-Servlet-技术中的两个重要对象，用于处理HTTP请求和响应。下面我会分别介绍它们的使用方法：\" class=\"headerlink\" title=\"HttpServletRequest 和 HttpServletResponse 是 Java Servlet 技术中的两个重要对象，用于处理HTTP请求和响应。下面我会分别介绍它们的使用方法：\"></a>HttpServletRequest 和 HttpServletResponse 是 Java Servlet 技术中的两个重要对象，用于处理HTTP请求和响应。下面我会分别介绍它们的使用方法：</h3><div class=\"custom-quote danger\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M19.76 5.23C15.84 5.23 12 2 12 2C12 2 8.15996 5.23 4.23996 5.23C4.23996 5.23 1.86996 16.99 12 22C22.13 16.99 19.76 5.23 19.76 5.23Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 16H12\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">HttpServletRequest</p>\n<p>HttpServletRequest 代表了客户端发来的HTTP请求，包含了请求的各种信息，例如请求的URL、HTTP方法、请求头、请求参数等。以下是一些常见的使用方式：</p>\n<p>&#x2F;&#x2F;获取请求方法（GET、POST等）：<br>String method &#x3D; request.getMethod();</p>\n<p>&#x2F;&#x2F;获取请求URL：<br>StringBuffer url &#x3D; request.getRequestURL();</p>\n<p>&#x2F;&#x2F;获取请求参数：<br>    &#x2F;&#x2F; 获取单个参数<br>    String paramName &#x3D; request.getParameter(“paramName”);<br>    &#x2F;&#x2F; 获取多个值的参数<br>    String[] values &#x3D; request.getParameterValues(“paramName”);</p>\n<p>&#x2F;&#x2F;获取请求头信息：<br>String userAgent &#x3D; request.getHeader(“User-Agent”);</p>\n<p>&#x2F;&#x2F;获取Session对象：<br>HttpSession session &#x3D; request.getSession();</p>\n<p>&#x2F;&#x2F;获取客户端的IP地址：<br>String ipAddress &#x3D; request.getRemoteAddr();</p>\n<p>&#x2F;&#x2F;获取请求的路径信息：<br>String pathInfo &#x3D; request.getPathInfo();</p>\n</div>\n<div class=\"custom-quote danger\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M19.76 5.23C15.84 5.23 12 2 12 2C12 2 8.15996 5.23 4.23996 5.23C4.23996 5.23 1.86996 16.99 12 22C22.13 16.99 19.76 5.23 19.76 5.23Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 16H12\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">HttpServletResponse</p>\n<p>HttpServletResponse 代表了服务器向客户端发送的HTTP响应，允许你设置响应的状态码、响应头和响应体。以下是一些常见的使用方式：</p>\n<p>&#x2F;&#x2F;设置响应状态码：<br>response.setStatus(HttpServletResponse.SC_OK); &#x2F;&#x2F; 设置为200 OK</p>\n<p>&#x2F;&#x2F;设置响应头：<br>response.setHeader(“Content-Type”, “text&#x2F;html; charset&#x3D;UTF-8”);</p>\n<p>&#x2F;&#x2F;写入响应体：<br>PrintWriter out &#x3D; response.getWriter();<br>out.println(“<html><body>Hello, World!</body></html>“);</p>\n<p>&#x2F;&#x2F;重定向：<br>response.sendRedirect(“&#x2F;newPage.jsp”);</p>\n<p>&#x2F;&#x2F;设置Cookie：<br>Cookie cookie &#x3D; new Cookie(“username”, “John”);<br>response.addCookie(cookie);</p>\n<p>&#x2F;&#x2F;设置缓存控制：<br>response.setHeader(“Cache-Control”, “no-cache, no-store, must-revalidate”);<br>response.setHeader(“Pragma”, “no-cache”);<br>response.setDateHeader(“Expires”, 0);\n</div>\n<h4 id=\"这些是-HttpServletRequest-和-HttpServletResponse-的一些常见用法。它们用于在Java-Servlet中处理HTTP请求和响应，允许你构建动态的Web应用程序。根据你的需求，你可以根据具体情况使用它们的不同方法来处理和操作HTTP请求和响应。\"><a href=\"#这些是-HttpServletRequest-和-HttpServletResponse-的一些常见用法。它们用于在Java-Servlet中处理HTTP请求和响应，允许你构建动态的Web应用程序。根据你的需求，你可以根据具体情况使用它们的不同方法来处理和操作HTTP请求和响应。\" class=\"headerlink\" title=\"这些是 HttpServletRequest 和 HttpServletResponse 的一些常见用法。它们用于在Java Servlet中处理HTTP请求和响应，允许你构建动态的Web应用程序。根据你的需求，你可以根据具体情况使用它们的不同方法来处理和操作HTTP请求和响应。\"></a>这些是 HttpServletRequest 和 HttpServletResponse 的一些常见用法。它们用于在Java Servlet中处理HTTP请求和响应，允许你构建动态的Web应用程序。根据你的需求，你可以根据具体情况使用它们的不同方法来处理和操作HTTP请求和响应。</h4>","feature":true,"text":"HttpServletRequest 和 HttpServletResponse 是 Java Servlet 技术中的两个重要对象，用于处理HTTP请求和响应...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"SpringMVC","slug":"SpringMVC","count":1,"path":"api/categories/SpringMVC.json"},{"name":"HttpServletRequest","slug":"SpringMVC/HttpServletRequest","count":1,"path":"api/categories/SpringMVC/HttpServletRequest.json"},{"name":"HttpServletResponse","slug":"SpringMVC/HttpServletRequest/HttpServletResponse","count":1,"path":"api/categories/SpringMVC/HttpServletRequest/HttpServletResponse.json"}],"tags":[{"name":"Springboot","slug":"Springboot","count":1,"path":"api/tags/Springboot.json"},{"name":"HttpServletRequest","slug":"HttpServletRequest","count":1,"path":"api/tags/HttpServletRequest.json"},{"name":"HttpServletResponse","slug":"HttpServletResponse","count":1,"path":"api/tags/HttpServletResponse.json"},{"name":"SpringMVC","slug":"SpringMVC","count":1,"path":"api/tags/SpringMVC.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HttpServletRequest-%E5%92%8C-HttpServletResponse-%E6%98%AF-Java-Servlet-%E6%8A%80%E6%9C%AF%E4%B8%AD%E7%9A%84%E4%B8%A4%E4%B8%AA%E9%87%8D%E8%A6%81%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%94%A8%E4%BA%8E%E5%A4%84%E7%90%86HTTP%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94%E3%80%82%E4%B8%8B%E9%9D%A2%E6%88%91%E4%BC%9A%E5%88%86%E5%88%AB%E4%BB%8B%E7%BB%8D%E5%AE%83%E4%BB%AC%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">HttpServletRequest 和 HttpServletResponse 是 Java Servlet 技术中的两个重要对象，用于处理HTTP请求和响应。下面我会分别介绍它们的使用方法：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%99%E4%BA%9B%E6%98%AF-HttpServletRequest-%E5%92%8C-HttpServletResponse-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95%E3%80%82%E5%AE%83%E4%BB%AC%E7%94%A8%E4%BA%8E%E5%9C%A8Java-Servlet%E4%B8%AD%E5%A4%84%E7%90%86HTTP%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94%EF%BC%8C%E5%85%81%E8%AE%B8%E4%BD%A0%E6%9E%84%E5%BB%BA%E5%8A%A8%E6%80%81%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E3%80%82%E6%A0%B9%E6%8D%AE%E4%BD%A0%E7%9A%84%E9%9C%80%E6%B1%82%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E5%85%B7%E4%BD%93%E6%83%85%E5%86%B5%E4%BD%BF%E7%94%A8%E5%AE%83%E4%BB%AC%E7%9A%84%E4%B8%8D%E5%90%8C%E6%96%B9%E6%B3%95%E6%9D%A5%E5%A4%84%E7%90%86%E5%92%8C%E6%93%8D%E4%BD%9CHTTP%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94%E3%80%82\"><span class=\"toc-text\">这些是 HttpServletRequest 和 HttpServletResponse 的一些常见用法。它们用于在Java Servlet中处理HTTP请求和响应，允许你构建动态的Web应用程序。根据你的需求，你可以根据具体情况使用它们的不同方法来处理和操作HTTP请求和响应。</span></a></li></ol></li></ol>","author":{"name":"伽啵","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"一位信安的大学牲兼ZSQ他爹","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"unbuntu常用命令","uid":"4244050a23e44ddc4e0428111ab85204","slug":"unbuntu常用命令","date":"2023-09-19T12:01:23.000Z","updated":"2023-10-06T14:49:50.766Z","comments":true,"path":"api/articles/unbuntu常用命令.json","keywords":null,"cover":"/images/5.png","text":" ubuntu命令行常用指令: 一些常用的 Ubuntu 命令： cd - 切换目录 例如：cd &#x2F;home&#x2F;user&#x2F;Docum...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"Ubuntu","slug":"Ubuntu","count":1,"path":"api/categories/Ubuntu.json"},{"name":"linux","slug":"Ubuntu/linux","count":1,"path":"api/categories/Ubuntu/linux.json"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","count":1,"path":"api/tags/Ubuntu.json"},{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}],"author":{"name":"伽啵","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"一位信安的大学牲兼ZSQ他爹","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2023-09-03T02:32:24.363Z","updated":"2023-09-03T07:32:24.628Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":"/images/3.png","text":"Welcome to Hexo! This is your very first post. Check documentation for more info...","link":"","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"伽啵","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"一位信安的大学牲兼ZSQ他爹","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}